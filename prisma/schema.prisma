// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // ✅ เปลี่ยนจาก mysql → postgresql
  url      = env("DATABASE_URL")
 
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String?
  name      String?
  picture   String?
  role      String   @default("user")
  enabled   Boolean  @default(true)
  address   String?
  orders    Order[]
  carts     Cart[]
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Product {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  price       Float
  sold        Int    @default(0)
  quantity    Int

  orderItems ProductOnOrder[]
  images     Image[]
  cartItems  ProductOnCart[]
  createdAt  DateTime         @default(now())
  updateAt   DateTime         @updatedAt
  category   Category         @relation(fields: [categoryId], references: [id])
  categoryId Int
}

model Order {
  id          Int              @id @default(autoincrement())
  products    ProductOnOrder[]
  cartTotal   Float
  orderStatus String           @default("กำลังดำเนินการ") // ✅ เปลี่ยนจาก status → orderStatus และแก้ค่าเริ่มต้น
  createdAt   DateTime         @default(now())
  updateAt    DateTime         @updatedAt
  orderBy     User             @relation(fields: [orderById], references: [id], onDelete: Cascade)
  orderById   Int

  stripePaymentId String @default("") // ✅ เปลี่ยนจาก Int → String แล้วใส่ default
  amount          Int    @default(0)
  status          String @default("pending")
  currency        String @default("THB") // ✅ แก้จาก currentcy → currency (คำสะกดถูกต้อง)
}

model ProductOnOrder {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  count     Int
  price     Float
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
}

model Cart {
  id        Int             @id @default(autoincrement())
  products  ProductOnCart[]
  cartTotal Float
  createdAt DateTime        @default(now())
  updateAt  DateTime        @updatedAt
  orderBy   User            @relation(fields: [orderById], references: [id], onDelete: Cascade)
  orderById Int
}

model ProductOnCart {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  count     Int
  price     Float
}

model Image {
  id         Int      @id @default(autoincrement())
  asset_id   String
  public_id  String
  url        String
  secure_url String
  createdAt  DateTime @default(now())
  updateAt   DateTime @updatedAt
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  Int
}


model HomeImage {
  id         Int      @id @default(autoincrement())
  title      String
  asset_id   String
  public_id  String
  url        String
  secure_url String
  is_featured Boolean @default(false) // ✅ เพิ่มตรงนี้
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
